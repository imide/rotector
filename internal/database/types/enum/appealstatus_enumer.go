// Code generated by "enumer -type=AppealStatus -trimprefix=AppealStatus"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _AppealStatusName = "PendingAcceptedRejected"

var _AppealStatusIndex = [...]uint8{0, 7, 15, 23}

const _AppealStatusLowerName = "pendingacceptedrejected"

func (i AppealStatus) String() string {
	if i < 0 || i >= AppealStatus(len(_AppealStatusIndex)-1) {
		return fmt.Sprintf("AppealStatus(%d)", i)
	}
	return _AppealStatusName[_AppealStatusIndex[i]:_AppealStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _AppealStatusNoOp() {
	var x [1]struct{}
	_ = x[AppealStatusPending-(0)]
	_ = x[AppealStatusAccepted-(1)]
	_ = x[AppealStatusRejected-(2)]
}

var _AppealStatusValues = []AppealStatus{AppealStatusPending, AppealStatusAccepted, AppealStatusRejected}

var _AppealStatusNameToValueMap = map[string]AppealStatus{
	_AppealStatusName[0:7]:        AppealStatusPending,
	_AppealStatusLowerName[0:7]:   AppealStatusPending,
	_AppealStatusName[7:15]:       AppealStatusAccepted,
	_AppealStatusLowerName[7:15]:  AppealStatusAccepted,
	_AppealStatusName[15:23]:      AppealStatusRejected,
	_AppealStatusLowerName[15:23]: AppealStatusRejected,
}

var _AppealStatusNames = []string{
	_AppealStatusName[0:7],
	_AppealStatusName[7:15],
	_AppealStatusName[15:23],
}

// AppealStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func AppealStatusString(s string) (AppealStatus, error) {
	if val, ok := _AppealStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _AppealStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to AppealStatus values", s)
}

// AppealStatusValues returns all values of the enum
func AppealStatusValues() []AppealStatus {
	return _AppealStatusValues
}

// AppealStatusStrings returns a slice of all String values of the enum
func AppealStatusStrings() []string {
	strs := make([]string, len(_AppealStatusNames))
	copy(strs, _AppealStatusNames)
	return strs
}

// IsAAppealStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i AppealStatus) IsAAppealStatus() bool {
	for _, v := range _AppealStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
