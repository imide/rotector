// Code generated by "enumer -type=ActivityType -trimprefix=ActivityType"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _ActivityTypeName = "AllUserViewedUserLookupUserReasonUpdatedUserConfirmedUserClearedUserSkippedUserQueuedUserTrainingUpvoteUserTrainingDownvoteUserDeletedGroupViewedGroupLookupGroupReasonUpdatedGroupConfirmedGroupConfirmedCustomGroupClearedGroupSkippedGroupTrainingUpvoteGroupTrainingDownvoteGroupDeletedUserLookupDiscordAppealSubmittedAppealClaimedAppealAcceptedAppealRejectedAppealClosedAppealReopenedUserDataDeletedUserBlacklistedDiscordUserBannedDiscordUserUnbannedBotSettingUpdatedGuildBans"

var _ActivityTypeIndex = [...]uint16{0, 3, 13, 23, 40, 53, 64, 75, 85, 103, 123, 134, 145, 156, 174, 188, 208, 220, 232, 251, 272, 284, 301, 316, 329, 343, 357, 369, 383, 398, 413, 430, 449, 466, 475}

const _ActivityTypeLowerName = "alluservieweduserlookupuserreasonupdateduserconfirmedusercleareduserskippeduserqueuedusertrainingupvoteusertrainingdownvoteuserdeletedgroupviewedgrouplookupgroupreasonupdatedgroupconfirmedgroupconfirmedcustomgroupclearedgroupskippedgrouptrainingupvotegrouptrainingdownvotegroupdeleteduserlookupdiscordappealsubmittedappealclaimedappealacceptedappealrejectedappealclosedappealreopeneduserdatadeleteduserblacklisteddiscorduserbanneddiscorduserunbannedbotsettingupdatedguildbans"

func (i ActivityType) String() string {
	if i < 0 || i >= ActivityType(len(_ActivityTypeIndex)-1) {
		return fmt.Sprintf("ActivityType(%d)", i)
	}
	return _ActivityTypeName[_ActivityTypeIndex[i]:_ActivityTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ActivityTypeNoOp() {
	var x [1]struct{}
	_ = x[ActivityTypeAll-(0)]
	_ = x[ActivityTypeUserViewed-(1)]
	_ = x[ActivityTypeUserLookup-(2)]
	_ = x[ActivityTypeUserReasonUpdated-(3)]
	_ = x[ActivityTypeUserConfirmed-(4)]
	_ = x[ActivityTypeUserCleared-(5)]
	_ = x[ActivityTypeUserSkipped-(6)]
	_ = x[ActivityTypeUserQueued-(7)]
	_ = x[ActivityTypeUserTrainingUpvote-(8)]
	_ = x[ActivityTypeUserTrainingDownvote-(9)]
	_ = x[ActivityTypeUserDeleted-(10)]
	_ = x[ActivityTypeGroupViewed-(11)]
	_ = x[ActivityTypeGroupLookup-(12)]
	_ = x[ActivityTypeGroupReasonUpdated-(13)]
	_ = x[ActivityTypeGroupConfirmed-(14)]
	_ = x[ActivityTypeGroupConfirmedCustom-(15)]
	_ = x[ActivityTypeGroupCleared-(16)]
	_ = x[ActivityTypeGroupSkipped-(17)]
	_ = x[ActivityTypeGroupTrainingUpvote-(18)]
	_ = x[ActivityTypeGroupTrainingDownvote-(19)]
	_ = x[ActivityTypeGroupDeleted-(20)]
	_ = x[ActivityTypeUserLookupDiscord-(21)]
	_ = x[ActivityTypeAppealSubmitted-(22)]
	_ = x[ActivityTypeAppealClaimed-(23)]
	_ = x[ActivityTypeAppealAccepted-(24)]
	_ = x[ActivityTypeAppealRejected-(25)]
	_ = x[ActivityTypeAppealClosed-(26)]
	_ = x[ActivityTypeAppealReopened-(27)]
	_ = x[ActivityTypeUserDataDeleted-(28)]
	_ = x[ActivityTypeUserBlacklisted-(29)]
	_ = x[ActivityTypeDiscordUserBanned-(30)]
	_ = x[ActivityTypeDiscordUserUnbanned-(31)]
	_ = x[ActivityTypeBotSettingUpdated-(32)]
	_ = x[ActivityTypeGuildBans-(33)]
}

var _ActivityTypeValues = []ActivityType{ActivityTypeAll, ActivityTypeUserViewed, ActivityTypeUserLookup, ActivityTypeUserReasonUpdated, ActivityTypeUserConfirmed, ActivityTypeUserCleared, ActivityTypeUserSkipped, ActivityTypeUserQueued, ActivityTypeUserTrainingUpvote, ActivityTypeUserTrainingDownvote, ActivityTypeUserDeleted, ActivityTypeGroupViewed, ActivityTypeGroupLookup, ActivityTypeGroupReasonUpdated, ActivityTypeGroupConfirmed, ActivityTypeGroupConfirmedCustom, ActivityTypeGroupCleared, ActivityTypeGroupSkipped, ActivityTypeGroupTrainingUpvote, ActivityTypeGroupTrainingDownvote, ActivityTypeGroupDeleted, ActivityTypeUserLookupDiscord, ActivityTypeAppealSubmitted, ActivityTypeAppealClaimed, ActivityTypeAppealAccepted, ActivityTypeAppealRejected, ActivityTypeAppealClosed, ActivityTypeAppealReopened, ActivityTypeUserDataDeleted, ActivityTypeUserBlacklisted, ActivityTypeDiscordUserBanned, ActivityTypeDiscordUserUnbanned, ActivityTypeBotSettingUpdated, ActivityTypeGuildBans}

var _ActivityTypeNameToValueMap = map[string]ActivityType{
	_ActivityTypeName[0:3]:          ActivityTypeAll,
	_ActivityTypeLowerName[0:3]:     ActivityTypeAll,
	_ActivityTypeName[3:13]:         ActivityTypeUserViewed,
	_ActivityTypeLowerName[3:13]:    ActivityTypeUserViewed,
	_ActivityTypeName[13:23]:        ActivityTypeUserLookup,
	_ActivityTypeLowerName[13:23]:   ActivityTypeUserLookup,
	_ActivityTypeName[23:40]:        ActivityTypeUserReasonUpdated,
	_ActivityTypeLowerName[23:40]:   ActivityTypeUserReasonUpdated,
	_ActivityTypeName[40:53]:        ActivityTypeUserConfirmed,
	_ActivityTypeLowerName[40:53]:   ActivityTypeUserConfirmed,
	_ActivityTypeName[53:64]:        ActivityTypeUserCleared,
	_ActivityTypeLowerName[53:64]:   ActivityTypeUserCleared,
	_ActivityTypeName[64:75]:        ActivityTypeUserSkipped,
	_ActivityTypeLowerName[64:75]:   ActivityTypeUserSkipped,
	_ActivityTypeName[75:85]:        ActivityTypeUserQueued,
	_ActivityTypeLowerName[75:85]:   ActivityTypeUserQueued,
	_ActivityTypeName[85:103]:       ActivityTypeUserTrainingUpvote,
	_ActivityTypeLowerName[85:103]:  ActivityTypeUserTrainingUpvote,
	_ActivityTypeName[103:123]:      ActivityTypeUserTrainingDownvote,
	_ActivityTypeLowerName[103:123]: ActivityTypeUserTrainingDownvote,
	_ActivityTypeName[123:134]:      ActivityTypeUserDeleted,
	_ActivityTypeLowerName[123:134]: ActivityTypeUserDeleted,
	_ActivityTypeName[134:145]:      ActivityTypeGroupViewed,
	_ActivityTypeLowerName[134:145]: ActivityTypeGroupViewed,
	_ActivityTypeName[145:156]:      ActivityTypeGroupLookup,
	_ActivityTypeLowerName[145:156]: ActivityTypeGroupLookup,
	_ActivityTypeName[156:174]:      ActivityTypeGroupReasonUpdated,
	_ActivityTypeLowerName[156:174]: ActivityTypeGroupReasonUpdated,
	_ActivityTypeName[174:188]:      ActivityTypeGroupConfirmed,
	_ActivityTypeLowerName[174:188]: ActivityTypeGroupConfirmed,
	_ActivityTypeName[188:208]:      ActivityTypeGroupConfirmedCustom,
	_ActivityTypeLowerName[188:208]: ActivityTypeGroupConfirmedCustom,
	_ActivityTypeName[208:220]:      ActivityTypeGroupCleared,
	_ActivityTypeLowerName[208:220]: ActivityTypeGroupCleared,
	_ActivityTypeName[220:232]:      ActivityTypeGroupSkipped,
	_ActivityTypeLowerName[220:232]: ActivityTypeGroupSkipped,
	_ActivityTypeName[232:251]:      ActivityTypeGroupTrainingUpvote,
	_ActivityTypeLowerName[232:251]: ActivityTypeGroupTrainingUpvote,
	_ActivityTypeName[251:272]:      ActivityTypeGroupTrainingDownvote,
	_ActivityTypeLowerName[251:272]: ActivityTypeGroupTrainingDownvote,
	_ActivityTypeName[272:284]:      ActivityTypeGroupDeleted,
	_ActivityTypeLowerName[272:284]: ActivityTypeGroupDeleted,
	_ActivityTypeName[284:301]:      ActivityTypeUserLookupDiscord,
	_ActivityTypeLowerName[284:301]: ActivityTypeUserLookupDiscord,
	_ActivityTypeName[301:316]:      ActivityTypeAppealSubmitted,
	_ActivityTypeLowerName[301:316]: ActivityTypeAppealSubmitted,
	_ActivityTypeName[316:329]:      ActivityTypeAppealClaimed,
	_ActivityTypeLowerName[316:329]: ActivityTypeAppealClaimed,
	_ActivityTypeName[329:343]:      ActivityTypeAppealAccepted,
	_ActivityTypeLowerName[329:343]: ActivityTypeAppealAccepted,
	_ActivityTypeName[343:357]:      ActivityTypeAppealRejected,
	_ActivityTypeLowerName[343:357]: ActivityTypeAppealRejected,
	_ActivityTypeName[357:369]:      ActivityTypeAppealClosed,
	_ActivityTypeLowerName[357:369]: ActivityTypeAppealClosed,
	_ActivityTypeName[369:383]:      ActivityTypeAppealReopened,
	_ActivityTypeLowerName[369:383]: ActivityTypeAppealReopened,
	_ActivityTypeName[383:398]:      ActivityTypeUserDataDeleted,
	_ActivityTypeLowerName[383:398]: ActivityTypeUserDataDeleted,
	_ActivityTypeName[398:413]:      ActivityTypeUserBlacklisted,
	_ActivityTypeLowerName[398:413]: ActivityTypeUserBlacklisted,
	_ActivityTypeName[413:430]:      ActivityTypeDiscordUserBanned,
	_ActivityTypeLowerName[413:430]: ActivityTypeDiscordUserBanned,
	_ActivityTypeName[430:449]:      ActivityTypeDiscordUserUnbanned,
	_ActivityTypeLowerName[430:449]: ActivityTypeDiscordUserUnbanned,
	_ActivityTypeName[449:466]:      ActivityTypeBotSettingUpdated,
	_ActivityTypeLowerName[449:466]: ActivityTypeBotSettingUpdated,
	_ActivityTypeName[466:475]:      ActivityTypeGuildBans,
	_ActivityTypeLowerName[466:475]: ActivityTypeGuildBans,
}

var _ActivityTypeNames = []string{
	_ActivityTypeName[0:3],
	_ActivityTypeName[3:13],
	_ActivityTypeName[13:23],
	_ActivityTypeName[23:40],
	_ActivityTypeName[40:53],
	_ActivityTypeName[53:64],
	_ActivityTypeName[64:75],
	_ActivityTypeName[75:85],
	_ActivityTypeName[85:103],
	_ActivityTypeName[103:123],
	_ActivityTypeName[123:134],
	_ActivityTypeName[134:145],
	_ActivityTypeName[145:156],
	_ActivityTypeName[156:174],
	_ActivityTypeName[174:188],
	_ActivityTypeName[188:208],
	_ActivityTypeName[208:220],
	_ActivityTypeName[220:232],
	_ActivityTypeName[232:251],
	_ActivityTypeName[251:272],
	_ActivityTypeName[272:284],
	_ActivityTypeName[284:301],
	_ActivityTypeName[301:316],
	_ActivityTypeName[316:329],
	_ActivityTypeName[329:343],
	_ActivityTypeName[343:357],
	_ActivityTypeName[357:369],
	_ActivityTypeName[369:383],
	_ActivityTypeName[383:398],
	_ActivityTypeName[398:413],
	_ActivityTypeName[413:430],
	_ActivityTypeName[430:449],
	_ActivityTypeName[449:466],
	_ActivityTypeName[466:475],
}

// ActivityTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ActivityTypeString(s string) (ActivityType, error) {
	if val, ok := _ActivityTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ActivityTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ActivityType values", s)
}

// ActivityTypeValues returns all values of the enum
func ActivityTypeValues() []ActivityType {
	return _ActivityTypeValues
}

// ActivityTypeStrings returns a slice of all String values of the enum
func ActivityTypeStrings() []string {
	strs := make([]string, len(_ActivityTypeNames))
	copy(strs, _ActivityTypeNames)
	return strs
}

// IsAActivityType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ActivityType) IsAActivityType() bool {
	for _, v := range _ActivityTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
