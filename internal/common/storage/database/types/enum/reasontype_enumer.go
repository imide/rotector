// Code generated by "enumer -type=ReasonType -trimprefix=ReasonType"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _ReasonTypeName = "UserFriendImageOutfitGroupMemberCustom"

var _ReasonTypeIndex = [...]uint8{0, 4, 10, 15, 21, 26, 32, 38}

const _ReasonTypeLowerName = "userfriendimageoutfitgroupmembercustom"

func (i ReasonType) String() string {
	if i < 0 || i >= ReasonType(len(_ReasonTypeIndex)-1) {
		return fmt.Sprintf("ReasonType(%d)", i)
	}
	return _ReasonTypeName[_ReasonTypeIndex[i]:_ReasonTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ReasonTypeNoOp() {
	var x [1]struct{}
	_ = x[ReasonTypeUser-(0)]
	_ = x[ReasonTypeFriend-(1)]
	_ = x[ReasonTypeImage-(2)]
	_ = x[ReasonTypeOutfit-(3)]
	_ = x[ReasonTypeGroup-(4)]
	_ = x[ReasonTypeMember-(5)]
	_ = x[ReasonTypeCustom-(6)]
}

var _ReasonTypeValues = []ReasonType{ReasonTypeUser, ReasonTypeFriend, ReasonTypeImage, ReasonTypeOutfit, ReasonTypeGroup, ReasonTypeMember, ReasonTypeCustom}

var _ReasonTypeNameToValueMap = map[string]ReasonType{
	_ReasonTypeName[0:4]:        ReasonTypeUser,
	_ReasonTypeLowerName[0:4]:   ReasonTypeUser,
	_ReasonTypeName[4:10]:       ReasonTypeFriend,
	_ReasonTypeLowerName[4:10]:  ReasonTypeFriend,
	_ReasonTypeName[10:15]:      ReasonTypeImage,
	_ReasonTypeLowerName[10:15]: ReasonTypeImage,
	_ReasonTypeName[15:21]:      ReasonTypeOutfit,
	_ReasonTypeLowerName[15:21]: ReasonTypeOutfit,
	_ReasonTypeName[21:26]:      ReasonTypeGroup,
	_ReasonTypeLowerName[21:26]: ReasonTypeGroup,
	_ReasonTypeName[26:32]:      ReasonTypeMember,
	_ReasonTypeLowerName[26:32]: ReasonTypeMember,
	_ReasonTypeName[32:38]:      ReasonTypeCustom,
	_ReasonTypeLowerName[32:38]: ReasonTypeCustom,
}

var _ReasonTypeNames = []string{
	_ReasonTypeName[0:4],
	_ReasonTypeName[4:10],
	_ReasonTypeName[10:15],
	_ReasonTypeName[15:21],
	_ReasonTypeName[21:26],
	_ReasonTypeName[26:32],
	_ReasonTypeName[32:38],
}

// ReasonTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ReasonTypeString(s string) (ReasonType, error) {
	if val, ok := _ReasonTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ReasonTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ReasonType values", s)
}

// ReasonTypeValues returns all values of the enum
func ReasonTypeValues() []ReasonType {
	return _ReasonTypeValues
}

// ReasonTypeStrings returns a slice of all String values of the enum
func ReasonTypeStrings() []string {
	strs := make([]string, len(_ReasonTypeNames))
	copy(strs, _ReasonTypeNames)
	return strs
}

// IsAReasonType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ReasonType) IsAReasonType() bool {
	for _, v := range _ReasonTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
