// Code generated by "enumer -type=ReviewSortBy -trimprefix=ReviewSortBy"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _ReviewSortByName = "RandomConfidenceLastUpdatedReputationLastViewed"

var _ReviewSortByIndex = [...]uint8{0, 6, 16, 27, 37, 47}

const _ReviewSortByLowerName = "randomconfidencelastupdatedreputationlastviewed"

func (i ReviewSortBy) String() string {
	if i < 0 || i >= ReviewSortBy(len(_ReviewSortByIndex)-1) {
		return fmt.Sprintf("ReviewSortBy(%d)", i)
	}
	return _ReviewSortByName[_ReviewSortByIndex[i]:_ReviewSortByIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ReviewSortByNoOp() {
	var x [1]struct{}
	_ = x[ReviewSortByRandom-(0)]
	_ = x[ReviewSortByConfidence-(1)]
	_ = x[ReviewSortByLastUpdated-(2)]
	_ = x[ReviewSortByReputation-(3)]
	_ = x[ReviewSortByLastViewed-(4)]
}

var _ReviewSortByValues = []ReviewSortBy{ReviewSortByRandom, ReviewSortByConfidence, ReviewSortByLastUpdated, ReviewSortByReputation, ReviewSortByLastViewed}

var _ReviewSortByNameToValueMap = map[string]ReviewSortBy{
	_ReviewSortByName[0:6]:        ReviewSortByRandom,
	_ReviewSortByLowerName[0:6]:   ReviewSortByRandom,
	_ReviewSortByName[6:16]:       ReviewSortByConfidence,
	_ReviewSortByLowerName[6:16]:  ReviewSortByConfidence,
	_ReviewSortByName[16:27]:      ReviewSortByLastUpdated,
	_ReviewSortByLowerName[16:27]: ReviewSortByLastUpdated,
	_ReviewSortByName[27:37]:      ReviewSortByReputation,
	_ReviewSortByLowerName[27:37]: ReviewSortByReputation,
	_ReviewSortByName[37:47]:      ReviewSortByLastViewed,
	_ReviewSortByLowerName[37:47]: ReviewSortByLastViewed,
}

var _ReviewSortByNames = []string{
	_ReviewSortByName[0:6],
	_ReviewSortByName[6:16],
	_ReviewSortByName[16:27],
	_ReviewSortByName[27:37],
	_ReviewSortByName[37:47],
}

// ReviewSortByString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ReviewSortByString(s string) (ReviewSortBy, error) {
	if val, ok := _ReviewSortByNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ReviewSortByNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ReviewSortBy values", s)
}

// ReviewSortByValues returns all values of the enum
func ReviewSortByValues() []ReviewSortBy {
	return _ReviewSortByValues
}

// ReviewSortByStrings returns a slice of all String values of the enum
func ReviewSortByStrings() []string {
	strs := make([]string, len(_ReviewSortByNames))
	copy(strs, _ReviewSortByNames)
	return strs
}

// IsAReviewSortBy returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ReviewSortBy) IsAReviewSortBy() bool {
	for _, v := range _ReviewSortByValues {
		if i == v {
			return true
		}
	}
	return false
}
