// Code generated by "enumer -type=ActivityType -trimprefix=ActivityType"; DO NOT EDIT.

package enum

import (
	"fmt"
	"strings"
)

const _ActivityTypeName = "AllUserViewedUserLookupUserConfirmedUserConfirmedCustomUserClearedUserSkippedUserRecheckedUserTrainingUpvoteUserTrainingDownvoteUserDeletedGroupViewedGroupLookupGroupConfirmedGroupConfirmedCustomGroupClearedGroupSkippedGroupTrainingUpvoteGroupTrainingDownvoteGroupDeletedAppealSubmittedAppealSkippedAppealAcceptedAppealRejectedAppealClosedDiscordUserBannedDiscordUserUnbanned"

var _ActivityTypeIndex = [...]uint16{0, 3, 13, 23, 36, 55, 66, 77, 90, 108, 128, 139, 150, 161, 175, 195, 207, 219, 238, 259, 271, 286, 299, 313, 327, 339, 356, 375}

const _ActivityTypeLowerName = "alluservieweduserlookupuserconfirmeduserconfirmedcustomusercleareduserskippeduserrecheckedusertrainingupvoteusertrainingdownvoteuserdeletedgroupviewedgrouplookupgroupconfirmedgroupconfirmedcustomgroupclearedgroupskippedgrouptrainingupvotegrouptrainingdownvotegroupdeletedappealsubmittedappealskippedappealacceptedappealrejectedappealcloseddiscorduserbanneddiscorduserunbanned"

func (i ActivityType) String() string {
	if i < 0 || i >= ActivityType(len(_ActivityTypeIndex)-1) {
		return fmt.Sprintf("ActivityType(%d)", i)
	}
	return _ActivityTypeName[_ActivityTypeIndex[i]:_ActivityTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ActivityTypeNoOp() {
	var x [1]struct{}
	_ = x[ActivityTypeAll-(0)]
	_ = x[ActivityTypeUserViewed-(1)]
	_ = x[ActivityTypeUserLookup-(2)]
	_ = x[ActivityTypeUserConfirmed-(3)]
	_ = x[ActivityTypeUserConfirmedCustom-(4)]
	_ = x[ActivityTypeUserCleared-(5)]
	_ = x[ActivityTypeUserSkipped-(6)]
	_ = x[ActivityTypeUserRechecked-(7)]
	_ = x[ActivityTypeUserTrainingUpvote-(8)]
	_ = x[ActivityTypeUserTrainingDownvote-(9)]
	_ = x[ActivityTypeUserDeleted-(10)]
	_ = x[ActivityTypeGroupViewed-(11)]
	_ = x[ActivityTypeGroupLookup-(12)]
	_ = x[ActivityTypeGroupConfirmed-(13)]
	_ = x[ActivityTypeGroupConfirmedCustom-(14)]
	_ = x[ActivityTypeGroupCleared-(15)]
	_ = x[ActivityTypeGroupSkipped-(16)]
	_ = x[ActivityTypeGroupTrainingUpvote-(17)]
	_ = x[ActivityTypeGroupTrainingDownvote-(18)]
	_ = x[ActivityTypeGroupDeleted-(19)]
	_ = x[ActivityTypeAppealSubmitted-(20)]
	_ = x[ActivityTypeAppealSkipped-(21)]
	_ = x[ActivityTypeAppealAccepted-(22)]
	_ = x[ActivityTypeAppealRejected-(23)]
	_ = x[ActivityTypeAppealClosed-(24)]
	_ = x[ActivityTypeDiscordUserBanned-(25)]
	_ = x[ActivityTypeDiscordUserUnbanned-(26)]
}

var _ActivityTypeValues = []ActivityType{ActivityTypeAll, ActivityTypeUserViewed, ActivityTypeUserLookup, ActivityTypeUserConfirmed, ActivityTypeUserConfirmedCustom, ActivityTypeUserCleared, ActivityTypeUserSkipped, ActivityTypeUserRechecked, ActivityTypeUserTrainingUpvote, ActivityTypeUserTrainingDownvote, ActivityTypeUserDeleted, ActivityTypeGroupViewed, ActivityTypeGroupLookup, ActivityTypeGroupConfirmed, ActivityTypeGroupConfirmedCustom, ActivityTypeGroupCleared, ActivityTypeGroupSkipped, ActivityTypeGroupTrainingUpvote, ActivityTypeGroupTrainingDownvote, ActivityTypeGroupDeleted, ActivityTypeAppealSubmitted, ActivityTypeAppealSkipped, ActivityTypeAppealAccepted, ActivityTypeAppealRejected, ActivityTypeAppealClosed, ActivityTypeDiscordUserBanned, ActivityTypeDiscordUserUnbanned}

var _ActivityTypeNameToValueMap = map[string]ActivityType{
	_ActivityTypeName[0:3]:          ActivityTypeAll,
	_ActivityTypeLowerName[0:3]:     ActivityTypeAll,
	_ActivityTypeName[3:13]:         ActivityTypeUserViewed,
	_ActivityTypeLowerName[3:13]:    ActivityTypeUserViewed,
	_ActivityTypeName[13:23]:        ActivityTypeUserLookup,
	_ActivityTypeLowerName[13:23]:   ActivityTypeUserLookup,
	_ActivityTypeName[23:36]:        ActivityTypeUserConfirmed,
	_ActivityTypeLowerName[23:36]:   ActivityTypeUserConfirmed,
	_ActivityTypeName[36:55]:        ActivityTypeUserConfirmedCustom,
	_ActivityTypeLowerName[36:55]:   ActivityTypeUserConfirmedCustom,
	_ActivityTypeName[55:66]:        ActivityTypeUserCleared,
	_ActivityTypeLowerName[55:66]:   ActivityTypeUserCleared,
	_ActivityTypeName[66:77]:        ActivityTypeUserSkipped,
	_ActivityTypeLowerName[66:77]:   ActivityTypeUserSkipped,
	_ActivityTypeName[77:90]:        ActivityTypeUserRechecked,
	_ActivityTypeLowerName[77:90]:   ActivityTypeUserRechecked,
	_ActivityTypeName[90:108]:       ActivityTypeUserTrainingUpvote,
	_ActivityTypeLowerName[90:108]:  ActivityTypeUserTrainingUpvote,
	_ActivityTypeName[108:128]:      ActivityTypeUserTrainingDownvote,
	_ActivityTypeLowerName[108:128]: ActivityTypeUserTrainingDownvote,
	_ActivityTypeName[128:139]:      ActivityTypeUserDeleted,
	_ActivityTypeLowerName[128:139]: ActivityTypeUserDeleted,
	_ActivityTypeName[139:150]:      ActivityTypeGroupViewed,
	_ActivityTypeLowerName[139:150]: ActivityTypeGroupViewed,
	_ActivityTypeName[150:161]:      ActivityTypeGroupLookup,
	_ActivityTypeLowerName[150:161]: ActivityTypeGroupLookup,
	_ActivityTypeName[161:175]:      ActivityTypeGroupConfirmed,
	_ActivityTypeLowerName[161:175]: ActivityTypeGroupConfirmed,
	_ActivityTypeName[175:195]:      ActivityTypeGroupConfirmedCustom,
	_ActivityTypeLowerName[175:195]: ActivityTypeGroupConfirmedCustom,
	_ActivityTypeName[195:207]:      ActivityTypeGroupCleared,
	_ActivityTypeLowerName[195:207]: ActivityTypeGroupCleared,
	_ActivityTypeName[207:219]:      ActivityTypeGroupSkipped,
	_ActivityTypeLowerName[207:219]: ActivityTypeGroupSkipped,
	_ActivityTypeName[219:238]:      ActivityTypeGroupTrainingUpvote,
	_ActivityTypeLowerName[219:238]: ActivityTypeGroupTrainingUpvote,
	_ActivityTypeName[238:259]:      ActivityTypeGroupTrainingDownvote,
	_ActivityTypeLowerName[238:259]: ActivityTypeGroupTrainingDownvote,
	_ActivityTypeName[259:271]:      ActivityTypeGroupDeleted,
	_ActivityTypeLowerName[259:271]: ActivityTypeGroupDeleted,
	_ActivityTypeName[271:286]:      ActivityTypeAppealSubmitted,
	_ActivityTypeLowerName[271:286]: ActivityTypeAppealSubmitted,
	_ActivityTypeName[286:299]:      ActivityTypeAppealSkipped,
	_ActivityTypeLowerName[286:299]: ActivityTypeAppealSkipped,
	_ActivityTypeName[299:313]:      ActivityTypeAppealAccepted,
	_ActivityTypeLowerName[299:313]: ActivityTypeAppealAccepted,
	_ActivityTypeName[313:327]:      ActivityTypeAppealRejected,
	_ActivityTypeLowerName[313:327]: ActivityTypeAppealRejected,
	_ActivityTypeName[327:339]:      ActivityTypeAppealClosed,
	_ActivityTypeLowerName[327:339]: ActivityTypeAppealClosed,
	_ActivityTypeName[339:356]:      ActivityTypeDiscordUserBanned,
	_ActivityTypeLowerName[339:356]: ActivityTypeDiscordUserBanned,
	_ActivityTypeName[356:375]:      ActivityTypeDiscordUserUnbanned,
	_ActivityTypeLowerName[356:375]: ActivityTypeDiscordUserUnbanned,
}

var _ActivityTypeNames = []string{
	_ActivityTypeName[0:3],
	_ActivityTypeName[3:13],
	_ActivityTypeName[13:23],
	_ActivityTypeName[23:36],
	_ActivityTypeName[36:55],
	_ActivityTypeName[55:66],
	_ActivityTypeName[66:77],
	_ActivityTypeName[77:90],
	_ActivityTypeName[90:108],
	_ActivityTypeName[108:128],
	_ActivityTypeName[128:139],
	_ActivityTypeName[139:150],
	_ActivityTypeName[150:161],
	_ActivityTypeName[161:175],
	_ActivityTypeName[175:195],
	_ActivityTypeName[195:207],
	_ActivityTypeName[207:219],
	_ActivityTypeName[219:238],
	_ActivityTypeName[238:259],
	_ActivityTypeName[259:271],
	_ActivityTypeName[271:286],
	_ActivityTypeName[286:299],
	_ActivityTypeName[299:313],
	_ActivityTypeName[313:327],
	_ActivityTypeName[327:339],
	_ActivityTypeName[339:356],
	_ActivityTypeName[356:375],
}

// ActivityTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ActivityTypeString(s string) (ActivityType, error) {
	if val, ok := _ActivityTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ActivityTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ActivityType values", s)
}

// ActivityTypeValues returns all values of the enum
func ActivityTypeValues() []ActivityType {
	return _ActivityTypeValues
}

// ActivityTypeStrings returns a slice of all String values of the enum
func ActivityTypeStrings() []string {
	strs := make([]string, len(_ActivityTypeNames))
	copy(strs, _ActivityTypeNames)
	return strs
}

// IsAActivityType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ActivityType) IsAActivityType() bool {
	for _, v := range _ActivityTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
