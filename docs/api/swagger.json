{
    "swagger": "2.0",
    "info": {
        "description": "REST API for Rotector",
        "title": "Rotector API",
        "contact": {},
        "license": {
            "name": "GPL-2.0",
            "url": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/groups/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a group by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Get group information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetGroupResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GetUserResponse"
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_rest_types.Group": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "downvotes": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "lastScanned": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "lastViewed": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/types.GroupUser"
                },
                "reasons": {
                    "$ref": "#/definitions/internal_rest_types.Reasons"
                },
                "reputation": {
                    "type": "integer"
                },
                "shout": {
                    "$ref": "#/definitions/types.GroupShout"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "upvotes": {
                    "type": "integer"
                }
            }
        },
        "internal_rest_types.Reason": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "evidence": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_rest_types.Reasons": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/internal_rest_types.Reason"
            }
        },
        "internal_rest_types.User": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "downvotes": {
                    "type": "integer"
                },
                "flaggedContent": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "flaggedGroups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "friends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.UserFriend"
                    }
                },
                "games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.UserGame"
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.UserGroup"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isBanned": {
                    "type": "boolean"
                },
                "lastScanned": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "lastViewed": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reasons": {
                    "$ref": "#/definitions/internal_rest_types.Reasons"
                },
                "reputation": {
                    "type": "integer"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "upvotes": {
                    "type": "integer"
                }
            }
        },
        "types.GetGroupResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/internal_rest_types.Group"
                },
                "status": {
                    "$ref": "#/definitions/types.GroupStatus"
                }
            }
        },
        "types.GetUserResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/types.UserStatus"
                },
                "user": {
                    "$ref": "#/definitions/internal_rest_types.User"
                }
            }
        },
        "types.GroupShout": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "poster": {
                    "$ref": "#/definitions/types.GroupUser"
                }
            }
        },
        "types.GroupStatus": {
            "type": "string",
            "enum": [
                "flagged",
                "confirmed",
                "cleared",
                "unflagged"
            ],
            "x-enum-varnames": [
                "GroupStatusFlagged",
                "GroupStatusConfirmed",
                "GroupStatusCleared",
                "GroupStatusUnflagged"
            ]
        },
        "types.GroupUser": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.UserFriend": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "hasVerifiedBadge": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.UserGame": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.UserGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "types.UserStatus": {
            "type": "string",
            "enum": [
                "flagged",
                "confirmed",
                "cleared",
                "unflagged"
            ],
            "x-enum-varnames": [
                "UserStatusFlagged",
                "UserStatusConfirmed",
                "UserStatusCleared",
                "UserStatusUnflagged"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "API key must be provided as: Bearer \u003capi_key\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}